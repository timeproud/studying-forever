# 创建人：gw
# 开发时间：2022/7/17 10:19


"""
元组：
    什么是元组
    元组的创建方式
    元组的遍历
"""
# 1.什么是元组
"""
元组是python内置数据结构之一，是一个不可变序列。
    不可变序列与可变序列的区别：不可变序列没有增删改的操作，如果有变动，则会改变地址。如字符串和元组，可变序列有增删改的操作且对象地址不发生更改，如列表和字典
    为什么要将元组设计成不可变序列：多任务环境下，同时操作对象时不需要加锁，防止数据混乱，所以在程序中尽量使用不可变序列。
    注意事项：元组中储存的是对对象的引用
            如果元组中的对象本身是不可变对象，则不能再引用其他对象
            如果元组中的对象是可变对象，则可变对象的引用不允许改变，但是数据可以改变
            举例：t = (10, [20, 30], 40)  在该元组中，不能改变10和40，也不能改变t[1]是列表，但是可以将列表中的数据进行修改，
                 因为列表是可变序列。比如使用t[1].append(100),则会变为：t = (10, [20, 30, 100], 40)
"""


# 2.元组的创建方式：直接小括号或者使用内置函数tuple（）
t = ('python', 'world', 98)   # 使用小括号创建元组
print(t)
print(type(t))
t1 = 'python', 'world', 98   # 小括号可以省略
print(t1)
print(type(t1))
t2 = 'python',        # 当元组只有一个元素时，需要加上逗号，否则容易与字符串搞混
print(t2)
print(type(t2))
t3 = tuple(('python', 'world', 98))   # 使用内置函数创建元组
print(t3)
print(type(t3))
t4 = ()
print(type(t4))# 空元组的创建方式
t5 = tuple()
print(type(t5))


# 3.元组的遍历  元组是可迭代对象，所以可以使用for...in进行遍历
for item in t:
    print(item)
